P2) Piped Commands
a) cat /etc/passwd | sort -t: -k3 -rn
Output:
nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin
pi:x:1000:1000:,,,:/home/pi:/bin/bash
rtkit:x:111:118:RealtimeKit,,,:/proc:/bin/false
pulse:x:110:116:PulseAudio daemon,,,:/var/run/pulse:/bin/false
lightdm:x:109:114:Light Display Manager:/var/lib/lightdm:/bin/false
statd:x:108:65534::/var/lib/nfs:/bin/false
sshd:x:107:65534::/var/run/sshd:/usr/sbin/nologin
ntp:x:106:111::/home/ntp:/bin/false
avahi:x:105:110:Avahi mDNS daemon,,,:/var/run/avahi-daemon:/bin/false
messagebus:x:104:109::/var/run/dbus:/bin/false
systemd-bus-proxy:x:103:106:systemd Bus Proxy,,,:/run/systemd:/bin/false
systemd-resolve:x:102:105:systemd Resolver,,,:/run/systemd/resolve:/bin/false
systemd-network:x:101:104:systemd Network Management,,,:/run/systemd/netif:/bin/false
systemd-timesync:x:100:103:systemd Time Synchronization,,,:/run/systemd:/bin/false
gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin
irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin
list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin
backup:x:34:34:backup:/var/backups:/usr/sbin/nologin
www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin
proxy:x:13:13:proxy:/bin:/usr/sbin/nologin
uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin
news:x:9:9:news:/var/spool/news:/usr/sbin/nologin
mail:x:8:8:mail:/var/mail:/usr/sbin/nologin
lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin
man:x:6:12:man:/var/cache/man:/usr/sbin/nologin
games:x:5:60:games:/usr/games:/usr/sbin/nologin
sync:x:4:65534:sync:/bin:/bin/sync
sys:x:3:3:sys:/dev:/usr/sbin/nologin
bin:x:2:2:bin:/bin:/usr/sbin/nologin
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
root:x:0:0:root:/root:/bin/bash

The cat command reads the contents of the input file /etc/passwd given as its argument and outputs them to the standard output. However, the 'pipe' ('|') symbol sends, or 'pipes' the standard output of cat to the standard input of the sort command with its given options. The sort command sorts the contents of a textfile line by line in alphabetical and numerical order. Piping the output of cat to the sort command therefore ouputs the contents of /etc/passwd in the order specified by the sort command options.
The option '-t' in sort precedes the delimiter to be used in the file, which in this case is followed by ':'. This indicates the fields in each line of the file will be separated by the a ':' character.
The option '-k3' tells the sort command to sort by entries in the 3rd field of each line in the file.
The option 'rn' tells the sort command to sort numerically in reverse order.
The output of the entire command is therefore, as shown above, the contents of /etc/passwd sorted numerically in reverse (decreasing) order by the third entry in each line, where each line entry is separated by a ':' character.

b) cat /etc/passwd | grep :1000: | sed -e 's/pi/cake/g' | \
> tr [:lower:] [:upper:]
Output:
CAKE:X:1000:1000:,,,:/HOME/CAKE:/BIN/BASH

The cat command again reads the contents of the input file /etc/passwd and pipes the output to the grep command with the argument ':1000:'. This searches the file and outputs its lines containig the string ':1000:'. Without any further pipes, we would have:
$ cat /etc/passwd | grep :1000:
Output:
pi:x:1000:1000:,,,:/home/pi:/bin/bash
This output is then piped to the sed command, a stream editor which edits streams (lines) of text. The option 'e' is necessary only to combine multiple commands. Its argument 's/pi/cake/g' then sets sed to substiution mode with the first character 's'. The following '/' character serves as the delimiter, and though any character may be used all following delimiters must match the first. The following strings then tell sed to substitute occurances of the string 'pi' for the string 'cake'. The 'g' flag at the end of the argument is necessary to replace not only the first occurance but all occurances of the first string in the argument. With no further commands, we would thus have:
$ cat /etc/passwd | grep :1000: | sed -e 's/pi/cake/g'
Output:
cake:x:1000:1000:,,,:/home/cake:/bin/bash
This output is then piped to the tr command (the character '\' simply designates a new line and allows the user to continue typing on the following line). This command with the arguments [:lower:] [:UPPER:] translates all lower case characters to upper case characters. All commands together therefore produce the original output shown above.

